<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Omar Faruq Smart JS Dashboard</title>
  <meta name="description" content="All-in-one JS mini apps with AI-style features by Omar Faruq.">
  <style>
    :root {
      --bg: #0d1117;
      --card: #161b22;
      --text: #e2e8f0;
      --accent: #3b82f6;
      --light-bg: #f9fafb;
      --light-text: #111;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: var(--bg);
      color: var(--text);
      margin: 0;
      padding: 0;
      transition: background 0.5s, color 0.5s;
    }

    header {
      text-align: center;
      padding: 30px;
      background: var(--card);
      box-shadow: 0 2px 10px rgba(0,0,0,0.5);
    }

    header h1 {
      color: var(--accent);
    }

    main {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      padding: 40px;
    }

    .card {
      background: var(--card);
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 0 15px rgba(59,130,246,0.2);
      transition: transform 0.3s;
    }

    .card:hover {
      transform: translateY(-5px);
    }

    .card h2 {
      color: var(--accent);
      font-size: 1.3rem;
      margin-bottom: 10px;
    }

    input, button, textarea {
      width: 100%;
      padding: 10px;
      border-radius: 10px;
      border: none;
      margin: 5px 0;
      font-size: 1rem;
    }

    button {
      background: var(--accent);
      color: white;
      cursor: pointer;
      transition: all 0.3s;
    }

    button:hover {
      background: #2563eb;
    }

    #chat-output {
      height: 150px;
      background: #1f2937;
      overflow-y: auto;
      padding: 10px;
      border-radius: 10px;
      color: #cbd5e1;
      font-size: 0.9rem;
    }

    .todo-list {
      list-style: none;
      padding: 0;
    }

    .todo-list li {
      background: #1f2937;
      padding: 8px;
      margin: 4px 0;
      border-radius: 8px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    footer {
      text-align: center;
      padding: 15px;
      background: var(--card);
      font-size: 0.9rem;
    }

    .light {
      background: var(--light-bg);
      color: var(--light-text);
    }

    .light header, .light footer, .light .card {
      background: #fff;
      color: #111;
    }

    .light button {
      background: #3b82f6;
      color: white;
    }
  </style>
</head>
<body>

  <header>
    <h1>Smart Utility Dashboard</h1>
    <p>Created by <strong>Omar Faruq</strong> | AI-Powered JS Tools</p>
    <button id="theme-toggle">Toggle Theme</button>
  </header>

  <main>

    <div class="card">
      <h2>ü§ñ AI Chat Assistant</h2>
      <div id="chat-output">Hello! I'm your smart JS assistant.</div>
      <input type="text" id="chat-input" placeholder="Ask me something..." />
      <button onclick="askAI()">Send</button>
    </div>

 
    <div class="card">
      <h2>üßÆ Smart Calculator</h2>
      <input type="text" id="calc-display" placeholder="Enter expression (e.g. 2+2)" />
      <button onclick="calculate()">Calculate</button>
      <p id="calc-result"></p>
    </div>

    <!-- To-Do List -->
    <div class="card">
      <h2>üìù To-Do Manager</h2>
      <input type="text" id="todo-input" placeholder="Add a task..." />
      <button onclick="addTodo()">Add Task</button>
      <ul class="todo-list" id="todo-list"></ul>
    </div>

    <!-- Quote Generator -->
    <div class="card">
      <h2>üí¨ Quote of the Day</h2>
      <p id="quote-text">Click the button to get inspired!</p>
      <button onclick="getQuote()">New Quote</button>
    </div>
  </main>

  <footer>¬© 2025 Omar Faruq | Smart JS Dashboard</footer>

  <script>
 
    const themeBtn = document.getElementById("theme-toggle");
    themeBtn.addEventListener("click", () => {
      document.body.classList.toggle("light");
    });

   
    const chatOutput = document.getElementById("chat-output");
    function askAI() {
      const input = document.getElementById("chat-input");
      const text = input.value.trim();
      if (!text) return;
      chatOutput.innerHTML += `<p><strong>You:</strong> ${text}</p>`;
      input.value = "";

      setTimeout(() => {
        let response;
        if (text.includes("hi") || text.includes("hello")) {
          response = "üëã Hi! I'm Omar's smart AI assistant.";
        } else if (text.includes("time")) {
          response = "üïí Current time is: " + new Date().toLocaleTimeString();
        } else if (text.includes("date")) {
          response = "üìÖ Today is " + new Date().toDateString();
        } else {
          response = "ü§ñ I'm learning new things every day!";
        }
        chatOutput.innerHTML += `<p><strong>AI:</strong> ${response}</p>`;
        chatOutput.scrollTop = chatOutput.scrollHeight;
      }, 600);
    }

   
    function calculate() {
      const expr = document.getElementById("calc-display").value;
      try {
        const result = eval(expr);
        document.getElementById("calc-result").textContent = `Result: ${result}`;
      } catch {
        document.getElementById("calc-result").textContent = "Invalid Expression!";
      }
    }

  
    function addTodo() {
      const input = document.getElementById("todo-input");
      const list = document.getElementById("todo-list");
      const text = input.value.trim();
      if (!text) return;

      const li = document.createElement("li");
      li.innerHTML = `${text} <button onclick="this.parentElement.remove()">‚ùå</button>`;
      list.appendChild(li);
      input.value = "";
    }

  
    async function getQuote() {
      try {
        const res = await fetch("https://api.quotable.io/random");
        const data = await res.json();
        document.getElementById("quote-text").textContent = `"${data.content}" ‚Äî ${data.author}`;
      } catch {
        document.getElementById("quote-text").textContent = "Error fetching quote.";
      }
    }
  </script>

</body>
</html>
